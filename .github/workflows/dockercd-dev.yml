name: Build docker images

on:
  push:
    branches:
      - main
      - develop/**
    paths:
      - docker
  workflow_dispatch:

  release:
    types: [published, edited]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: 'hub.opensciencegrid.org'
  PROJECT: 'coffea-casa'
  GITHUB_ACTIONS: 'true'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
      unique_tag: ${{ steps.tag.outputs.unique_tag }}
      publish: ${{ steps.publish.outputs.publish }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Compute Tag
        id: tag
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")
          TAG=$(echo ${GITHUB_REF} | sed -e "s,refs/heads/master,head\,${SHORT_SHA},g" -e 's,refs/tags/,,g' -e 's,refs/pull/\([0-9]*\).*,pr\1,g')
          UNIQUE_TAG=$(echo ${GITHUB_REF} | sed -e "s,refs/heads/master,${SHORT_SHA},g" -e 's,refs/tags/,,g' -e 's,refs/pull/\([0-9]*\).*,pr\1,g')
          echo "tag=$TAG"
          echo "unique_tag=$UNIQUE_TAG"
          echo "::set-output name=tag::$TAG"
          echo "::set-output name=unique_tag::$UNIQUE_TAG"
      - name: Check whether publishing enabled
        id: publish
        env:
          ENABLE_PUBLISH: ${{ secrets.HARBOR_PASSWORD }}
        run: |
          echo "Enable publish: ${{ env.ENABLE_PUBLISH != '' }}"
          echo "::set-output name=publish::${{ env.ENABLE_PUBLISH != '' }}"

  dask-base:
    runs-on: ubuntu-latest
    needs: version-check
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Harbor Hub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: hub.opensciencegrid.org
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Build
        uses: docker/build-push-action@v2
        with:
          outputs: type=docker,dest=/tmp/cc-base-ubuntu.tar
          push: ${{ needs.setup.outputs.publish != 'true' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: docker/
          file: docker/Dockerfile.cc-base-ubuntu
          tags: |
            ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            TAG=${{ needs.version-check.outputs.date }} 
            PROJECT=${{ env.PROJECT }} 
            GITHUB_ACTIONS=${{ env.GITHUB_ACTIONS }}
      - uses: actions/upload-artifact@v2
        with:
          name: cc-base-ubuntu
          path: /tmp/cc-base-ubuntu.tar

  dask-cc:
    runs-on: ubuntu-latest
    needs: [version-check, dask-base]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Harbor Hub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: hub.opensciencegrid.org
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: cc-base-ubuntu
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/cc-base-ubuntu.tar
      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          outputs: type=docker,dest=/tmp/cc-ubuntu.tar
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: docker/
          file: docker/Dockerfile.cc-ubuntu
          tags: |
            hub.opensciencegrid.org/coffea-casa/cc-ubuntu:${{ needs.version-check.outputs.date }}
            coffea-casa/cc-ubuntu:${{ needs.version-check.outputs.date }}
          build-args: |
            TAG=${{ needs.version-check.outputs.date }}
            PROJECT=${{ env.PROJECT }} 
            GITHUB_ACTIONS=${{ env.GITHUB_ACTIONS }}
      - uses: actions/upload-artifact@v2
        with:
          name: cc-ubuntu
          path: /tmp/cc-ubuntu.tar

  dask-skyhook:
    runs-on: ubuntu-latest
    needs: [version-check, dask-cc]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Harbor Hub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: hub.opensciencegrid.org
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: cc-ubuntu
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/cc-ubuntu.tar
      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: docker/
          file: docker/Dockerfile.cc-base-centos7
          tags: |
            hub.opensciencegrid.org/coffea-casa/cc-ubuntu-skyhook:${{ needs.version-check.outputs.date }}
            coffea-casa/cc-ubuntu-skyhook:${{ needs.version-check.outputs.date }}
          build-args: |
            TAG=${{ needs.version-check.outputs.date }}
            PROJECT=${{ env.PROJECT }} 
            GITHUB_ACTIONS=${{ env.GITHUB_ACTIONS }}

  dask-analysis:
    runs-on: ubuntu-latest
    needs: version-check
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Harbor Hub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: hub.opensciencegrid.org
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          outputs: type=docker,dest=/tmp/cc-analysis-ubuntu.tar
          cache-from: type=local,src=/tmp/.buildx-cache   
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: docker/
          file: docker/Dockerfile.cc-analysis-ubuntu
          tags: |
            hub.opensciencegrid.org/coffea-casa/cc-analysis-ubuntu:${{ needs.version-check.outputs.date }}
            coffea-casa/cc-analysis-ubuntu:${{ needs.version-check.outputs.date }}
          build-args: |
            TAG=${{ needs.version-check.outputs.date }} 
            PROJECT=${{ env.PROJECT }} 
            GITHUB_ACTIONS=${{ env.GITHUB_ACTIONS }}
      - uses: actions/upload-artifact@v2
        with:
          name: cc-analysis-ubuntu
          path: /tmp/cc-analysis-ubuntu.tar


  dask-analysis-skyhook:
    runs-on: ubuntu-latest
    needs: [version-check, dask-analysis]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Harbor Hub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: hub.opensciencegrid.org
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: cc-analysis-ubuntu
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/cc-analysis-ubuntu.tar
      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: docker/
          file: docker/Dockerfile.cc-analysis-ubuntu-skyhook
          tags: |
            hub.opensciencegrid.org/coffea-casa/cc-analysis-ubuntu-skyhook:${{ needs.version-check.outputs.date }}
            coffea-casa/cc-analysis-ubuntu-skyhook:${{ needs.version-check.outputs.date }}
          build-args: |
            TAG=${{ needs.version-check.outputs.date }}
            PROJECT=${{ env.PROJECT }} 
            GITHUB_ACTIONS=${{ env.GITHUB_ACTIONS }}