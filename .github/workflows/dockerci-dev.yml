name: Test docker images

on:
  pull_request:
    branches:
      - master
  workflow_dispatch:

env:
  PROJECT: 'coffea-casa'
  GITHUB_ACTIONS: 'true'

jobs:
  version-check:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch current date
        id: date
        run: |
          echo "::set-output name=date::$(date +'%Y-%m-%d')"
    outputs:
      date: ${{ steps.date.outputs.date }}

  dask-base:
    runs-on: ubuntu-latest
    needs: version-check
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Harbor Hub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: hub.opensciencegrid.org
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Build
        uses: docker/build-push-action@v2
        with:
          outputs: type=docker,dest=/tmp/cc-base-ubuntu.tar
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: docker/
          file: docker/Dockerfile.cc-base-ubuntu
          tags: |
            localhost:5000/coffea-casa/cc-base-ubuntu:${{ needs.version-check.outputs.date }}
          build-args: |
            TAG=${{ needs.version-check.outputs.date }}
            PROJECT=${{ env.PROJECT }} 
            GITHUB_ACTIONS=${{ env.GITHUB_ACTIONS }}
            REGISTRY="localhost:5000"
      - uses: actions/upload-artifact@v2
        with:
          name: cc-base-ubuntu
          path: /tmp/cc-base-ubuntu.tar
          retention-days: 1

  dask-cc:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    needs: [version-check, dask-base]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Harbor Hub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: hub.opensciencegrid.org
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: cc-base-ubuntu
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/cc-base-ubuntu.tar
      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          outputs: type=docker,dest=/tmp/cc-ubuntu.tar
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: docker/
          file: docker/Dockerfile.cc-ubuntu
          tags: |
            localhost:5000/coffea-casa/cc-ubuntu:${{ needs.version-check.outputs.date }}
          build-args: |
            TAG=${{ needs.version-check.outputs.date }}
            PROJECT=${{ env.PROJECT }} 
            GITHUB_ACTIONS=${{ env.GITHUB_ACTIONS }}
            REGISTRY="localhost:5000"
      - uses: actions/upload-artifact@v2
        with:
          name: cc-ubuntu
          path: /tmp/cc-ubuntu.tar
          retention-days: 1

  dask-skyhook:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    needs: [version-check, dask-cc]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Harbor Hub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: hub.opensciencegrid.org
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: cc-ubuntu
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/cc-ubuntu.tar
      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: docker/
          file: docker/Dockerfile.cc-base-centos7
          tags: |
            coffea-casa/cc-ubuntu-skyhook:${{ needs.version-check.outputs.date }}
          build-args: |
            TAG=${{ needs.version-check.outputs.date }}
            PROJECT=${{ env.PROJECT }} 
            GITHUB_ACTIONS=${{ env.GITHUB_ACTIONS }}
            REGISTRY="localhost:5000"

  dask-analysis:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    needs: version-check
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Harbor Hub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: hub.opensciencegrid.org
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          outputs: type=docker,dest=/tmp/cc-analysis-ubuntu.tar
          cache-from: type=local,src=/tmp/.buildx-cache   
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: docker/
          file: docker/Dockerfile.cc-analysis-ubuntu
          tags: |
            coffea-casa/cc-analysis-ubuntu:${{ needs.version-check.outputs.date }}
          build-args: |
            TAG=${{ needs.version-check.outputs.date }} 
            PROJECT=${{ env.PROJECT }} 
            GITHUB_ACTIONS=${{ env.GITHUB_ACTIONS }}
            REGISTRY="localhost:5000"
      - uses: actions/upload-artifact@v2
        with:
          name: cc-analysis-ubuntu
          path: /tmp/cc-analysis-ubuntu.tar
          retention-days: 1


  dask-analysis-skyhook:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    needs: [version-check, dask-analysis]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Harbor Hub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: hub.opensciencegrid.org
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: cc-analysis-ubuntu
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/cc-analysis-ubuntu.tar
      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: docker/
          file: docker/Dockerfile.cc-analysis-ubuntu-skyhook
          tags: |
            coffea-casa/cc-analysis-ubuntu-skyhook:${{ needs.version-check.outputs.date }}
          build-args: |
            TAG=${{ needs.version-check.outputs.date }}
            PROJECT=${{ env.PROJECT }} 
            GITHUB_ACTIONS=${{ env.GITHUB_ACTIONS }}
            REGISTRY="localhost:5000"