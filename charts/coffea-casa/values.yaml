---
# Disable/enable RBAC
rbac:
  enabled: True
  # Only if it exists
  traefik:
    serviceAccountName: null

# traefik nested config relates to the traefik Pod and Traefik running within it
# that is acting as a proxy for traffic towards the gateway or user created
# DaskCluster resources.
traefik:
  enabled: False
  service:
    type: LoadBalancer
    # type: ClusterIP
    # type: NodePort
    port:
      daskscheduler: 8786
      daskworker: 8788
  # Settings for nodeSelector, affinity, and tolerations for the traefik pods
  nodeSelector: {}
  affinity: {}
  tolerations: []
  # Number of instances of the proxy to run
  replicas: 1
  # Any annotations to add to the proxy pods
  annotations: {}
  # Resource requests/limits for the proxy pods
  resources: {}
  # The image to use for the proxy pod
  image:
    name: traefik
    tag: "v2.5.7"
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  # Any additional arguments to forward to traefik
  additionalArguments: []
  # The proxy log level
  loglevel: WARN
  # Whether to expose the dashboard on port 9000 (enable for debugging only!)
  dashboard: False

# Disable/enable ServiceX as a dependency
servicex:
  enabled: false
  # host: "http://coffea-casa-servicex-app:8000"

xcache:
  enabled: True
  xcache_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"

htcondor:
  enabled: False

oidc_auth:
  enabled: False
 
# Jupyterhub settings
jupyterhub:
  hub:
    config:
      Authenticator:
        admin_users:
        - test
      allowed_users:
        - test
    DummyAuthenticator:
      password: Test_Test_Test
    JupyterHub:
      authenticator_class: dummy
    initContainers:
      - name: git-clone-templates
        image: alpine/git
        args:
          - clone
          - --single-branch
          - --branch=master
          - --depth=1
          - --
          - https://github.com/CoffeaTeam/coffea-casa-custom-jupyterhub-templates
          - /usr/local/share/jupyterhub/custom
        securityContext:
          runAsUser: 0
    networkPolicy:
      enabled: false
    readinessProbe:
      periodSeconds: 10
    db:
      pvc:
        storageClassName: standard
    image:
      name: hub.opensciencegrid.org/coffea-casa/k8s-hub-coffea-casa
      tag: 0.11.1
    extraEnv:
      DASK_BASE_DOMAIN: kubernetes.docker.internal
      CONDOR_ENABLED: 'True'
      SERVICEX_ENABLED: 'False'
  proxy:
    chp:
      resources:
        requests:
          memory: 0
          cpu: 0
      # livenessProbe:
      #  initialDelaySeconds: 30
      # readinessProbe:
      #  periodSeconds: 10
      networkPolicy:
        egress: [] # overrides allowance of 0.0.0.0/0
    extraEnv:
      # explicit notation (the "name" field takes precedence)
      CHP_NAMESPACE:
        name: CHP_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
    https:
      enabled: true
      type: letsencrypt
      hosts:
        - local.jovyan.org
      letsencrypt:
        contactEmail: local@jovyan.org
        acmeServer: https://pebble.coffea-casa/dir
    service:
      # type: LoadBalancer
      type: NodePort
      nodePorts:
        http: 30080
        https: 30443
      # loadBalancerIP: 127.0.0.1
    traefik:
      extraVolumes:
        - name: pebble-root-cert
          configMap:
            name: pebble
      extraVolumeMounts:
        - name: pebble-root-cert
          subPath: root-cert.pem
          mountPath: /etc/pebble/root-cert.pem
      extraEnv:
        LEGO_CA_CERTIFICATES: /etc/pebble/root-cert.pem
  singleuser:
    networkPolicy:
      enabled: false
    spec:
      securityContext:
        runAsUser: 6440
    uid: 6440
    gid: 11265
    extraLabels:
      jhub_user: '{username}'
    lifecycleHooks:
      postStart:
        exec:
          command: ['bash', '-c', 'mkdir -p /home/cms-jovyan/.condor/tokens.d/ && cp -f /etc/cmsaf-secrets/condor_token /home/cms-jovyan/.condor/tokens.d/condor_token']
    storage:
      homeMountPath: /home/cms-jovyan/
      dynamic:
        storageClass: standard
    image:
      name: daskdev/dask-notebook
      tag: 2021.6.0
    defaultUrl: "/lab"
    extraEnv:
      LABEXTENTION_FACTORY_CLASS: LocalCluster
      LABEXTENTION_FACTORY_MODULE: dask.distributed
    profileList:
      - display_name: "Coffea Base Image"
        description: "Coffea-casa build with coffea 0.7.11/dask 2021.11.2/condor and cheese"
        kubespawner_override:
          image: hub.opensciencegrid.org/coffea-casa/coffea-casa-analysis:2021.12.10
          imagePullPolicy: Always
          securityContext:
            runAsUser: 6440
            runAsGroup: 11265
            allowPrivilegeEscalation: False
            RunAsNonRoot: true
        default: true
    extraContainers:
    - name: dask-worker
      volumeMounts:
      - mountPath: /etc/cmsaf-secrets
        name: cmsaf-secrets
      image: hub.opensciencegrid.org/coffea-casa/coffea-casa-analysis:2021.12.10
      securityContext:
        runAsUser: 6440
        runAsGroup: 11265
        runAsNonRoot: True
      resources:
        limits:
          memory: 7Gi
          cpu: 2
      env:
        - name: COFFEA_CASA_SIDECAR
          value: 'True'
        - name: XCACHE_HOST
          value: "red-xcache1.unl.edu"
        - name: XRD_PLUGIN
          value: "/opt/conda/lib/libXrdClAuthzPlugin.so"
        - name: XRD_PLUGINCONFDIR
          value: "/opt/conda/etc/xrootd/client.plugins.d/"
        - name: BEARER_TOKEN_FILE
          value: "/etc/cmsaf-secrets/xcache_token"
        - name: WORKER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
      command: ["/bin/bash", "-c", "cd /home/cms-jovyan; supervisord --nodaemon -c /etc/supervisor/supervisord.conf"]

  scheduling:
    userScheduler:
      enabled: false

  debug:
    enabled: true
