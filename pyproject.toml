[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8,<9", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "coffea-casa"
dynamic = ["version", "dependencies", "readme"]
requires-python = ">=3.8"
license = {file = "LICENSE"}
description = "Wrappers for Dask clusters to be used from coffea-casa AF"
authors = [
  {name = "The Coffea-casa Development Team", email = "coffea-casa-dev@cern.ch"},
]
classifiers =[
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering"
]

[project.urls]
Homepage = "https://github.com/CoffeaTeam/coffea-casa"
Documentation = "https://coffea-casa.readthedocs.io/en/latest/"
Repository = "https://github.com/CoffeaTeam/coffea-casa/issues"
"Bug Tracker" = "https://github.com/CoffeaTeam/coffea-casa/issues"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
readme = {file = ["README.md"], content-type = "text/markdown"}

[tool.setuptools_scm]
version_file = "coffea_casa/_version.py"

[tool.flake8]
ignore = ["E203", "E266", "E501", "W503"]
max-line-length = 88
max-complexity = 18
select = ["B","C","E","F","W","T4","B9"]

[tool.black]
target-version = ["py38", "py39", "py310","py311","py312"]
required-version = "23.10.1"
exclude = '''
/(
   coffea_casa/_version.py
    \.git
  | .eggs
  | build
)/
'''

[tool.mypy]
files = "coffea_casa"
pretty = true
strict = true
strict_equality = true
python_version = "3.10"
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
check_untyped_defs = true
disallow_any_generics = true
disallow_subclassing_any = true
warn_return_any = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
warn_unreachable = true
show_error_codes = true
show_error_context = true
no_implicit_optional = true
ignore_missing_imports = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

# pyproject.toml
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",]
log_cli_level = "INFO"
xfail_strict = true
filterwarnings = ['error']
