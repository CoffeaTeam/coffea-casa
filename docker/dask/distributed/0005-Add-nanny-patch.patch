diff --git a/distributed/cli/dask_worker.py b/distributed/cli/dask_worker.py
index 376f2a1c..10af475a 100755
--- a/distributed/cli/dask_worker.py
+++ b/distributed/cli/dask_worker.py
@@ -254,6 +254,16 @@ pem_file_option_type = click.Path(exists=True, resolve_path=True)
     help="Module that should be loaded by each nanny "
     'like "foo.bar" or "/path/to/foo.py"',
 )
+
+@click.option(
+    "--nanny-contact-address",
+    type=str,
+    default=None,
+    help="The address the nanny advertises to the scheduler for "
+    "communication with it."
+    "Example: tcp://127.0.0.1:3000",
+)
+
 @click.version_option()
 def main(
     scheduler,
@@ -262,6 +272,7 @@ def main(
     listen_address,
     contact_address,
     nanny_port: str | None,
+    nanny_contact_address,
     nthreads,
     nprocs,
     n_workers,
@@ -440,6 +451,7 @@ def main(
             loop=loop,
             resources=resources,
             security=sec,
+            nanny_contact_address=nanny_contact_address,
             contact_address=contact_address,
             host=host,
             dashboard=dashboard,
diff --git a/distributed/worker.py b/distributed/worker.py
index 18a91668..ae38302d 100644
--- a/distributed/worker.py
+++ b/distributed/worker.py
@@ -413,6 +413,7 @@ class Worker(ServerNode):
     data_needed: UniqueTaskHeap
     data_needed_per_worker: defaultdict[str, UniqueTaskHeap]
     nanny: Nanny | None
+    nanny_contact_address: str | None
     _lock: threading.Lock
     in_flight_workers: dict[str, set[str]]  # {worker address: {ts.key, ...}}
     busy_workers: set[str]
@@ -531,6 +532,7 @@ class Worker(ServerNode):
         dashboard: bool = False,
         http_prefix: str = "/",
         nanny: Nanny | None = None,
+        nanny_contact_address: str | None = None,
         plugins: tuple[WorkerPlugin, ...] = (),
         low_level_profiler: bool | None = None,
         validate: bool | None = None,
@@ -558,6 +560,7 @@ class Worker(ServerNode):
         self.data_needed = UniqueTaskHeap()
         self.data_needed_per_worker = defaultdict(UniqueTaskHeap)
         self.nanny = nanny
+        self.nanny_contact_address = nanny_contact_address
         self._lock = threading.Lock()
 
         self.in_flight_workers = {}
@@ -1127,6 +1130,8 @@ class Worker(ServerNode):
         start = time()
         if self.contact_address is None:
             self.contact_address = self.address
+        if self.nanny_contact_address is None:
+            self.nanny_contact_address = self.nanny
         logger.info("-" * 49)
         while True:
             try:
@@ -1157,7 +1162,7 @@ class Worker(ServerNode):
                         memory_limit=self.memory_manager.memory_limit,
                         local_directory=self.local_directory,
                         services=self.service_ports,
-                        nanny=self.nanny,
+                        nanny=self.nanny_contact_address,
                         pid=os.getpid(),
                         versions=get_versions(),
                         metrics=await self.get_metrics(),
